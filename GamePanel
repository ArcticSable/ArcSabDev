echo "# ArcSabDev" >> README.md
git init
git add README.md
git commit -m "first commit"
git remote add origin https://github.com/ArcticSable/ArcSabDev.git
git push -u origin master


import javax.swing.*;
import java.awt.*;
import java.awt.image.BufferedImage;
import java.util.*;

public class GamePanel extends JPanel implements Runnable {


    //Field
    public static int WIDTH = 400;
    public static int HEIGHT = 400;



    private BufferedImage image;
    private  Graphics2D g;
    private Thread thread;
    //private boolean running;
    public static GameBack background;
    public static Player player;
    public static ArrayList<Bullet> bullets;


    //Constructor
    public GamePanel(){
        super();

        setPreferredSize(new Dimension(WIDTH, HEIGHT));
        setFocusable(true);
        requestFocus();

        addKeyListener(new Listeners());

    }


    public void start(){
        thread = new Thread(this);
        thread.start();

    }


    //Functions
    public void run() {

        image = new BufferedImage(WIDTH,HEIGHT, BufferedImage.TYPE_INT_RGB);
        g =(Graphics2D) image.getGraphics();
        g.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);

        background = new GameBack();
        player = new Player();
        bullets = new ArrayList<Bullet>();

        while(true) { // TODO States

            gameUpdate();
            gameRender();
            gameDraw();

            try {
                thread.sleep(30); // TODO FPS
            } catch (InterruptedException e) {
                e.printStackTrace();
            }


        }
    }


    public void gameUpdate(){
        //Background update
        background.update();

        //Player update
        player.update();

        //Bullets update

        for (int i = 0; i < bullets.size(); i++) {
            bullets.get(i).update();
            boolean remove = bullets.get(i).remove();
            if (remove){
                bullets.remove(i);
                i--;
            }
        }
    }


    public void gameRender(){
        //Background draw
        background.draw(g);

        //Player draw
        player.draw(g);

        //Bullets draw
        for(int i = 0; i < bullets.size(); i++){
            bullets.get(i).draw(g);
        }
    }


    private void gameDraw(){
        Graphics g2 = this.getGraphics();
        g2.drawImage(image, 0 , 0 , null);
        g2.dispose();
    }



}
